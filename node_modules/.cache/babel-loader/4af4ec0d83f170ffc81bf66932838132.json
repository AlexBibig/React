{"ast":null,"code":"var _jsxFileName = \"/Users/alex_hoadley/Desktop/GitHub/toDoList-React-TMS/src/components/App/App.js\";\nimport React from 'react';\nimport SearchBlock from '../SearchBlock';\nimport Header from '../Header';\nimport TodoList from '../TodoList';\nimport './App.css';\nimport Filter from '../Filter';\nimport ItemAddForm from '../ItemAddForm/ItemAddForm';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.cId = 100;\n    this.state = {\n      todoData: [{\n        text: 'Learn HTML',\n        important: false,\n        done: false,\n        id: 1\n      }, {\n        text: 'Learn CSS',\n        important: true,\n        done: false,\n        id: 2\n      }, {\n        text: 'Learn JS',\n        important: false,\n        done: false,\n        id: 3\n      }],\n      filter: 'all' // all || active || done\n\n    };\n\n    this.filter = (arr, filter) => {\n      switch (filter) {\n        case 'all':\n          return arr;\n\n        case 'active':\n          return arr.filter(el => !el.done);\n\n        case 'done':\n          return arr.filter(el => el.done);\n\n        default:\n          return arr;\n      }\n    };\n\n    this.onDelete = id => {\n      this.setState(prevState => {\n        const index = prevState.todoData.findIndex(el => el.id === id);\n        const arr = [...prevState.todoData.slice(0, index), ...prevState.todoData.slice(index + 1)];\n        return {\n          todoData: arr\n        };\n      });\n    };\n\n    this.search = (arr, searchText) => {\n      if (!searchText) {\n        return arr;\n      }\n\n      const newArr = arr.filter(item => {\n        return item.text.toUpperCase().includes(searchText.toUpperCase());\n      });\n      return newArr;\n    };\n\n    this.onAdd = label => {\n      const obj = {\n        text: label,\n        important: false,\n        id: this.cId++\n      };\n      this.setState(prevState => {\n        const newArr = [obj, ...prevState.todoData];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.getNewArrAccordingProp = (prop, prevState, id) => {\n      const index = prevState.todoData.findIndex(el => el.id === id);\n      const newObj = { ...prevState.todoData[index],\n        [prop]: !prevState.todoData[index][prop]\n      };\n      const newArr = [...prevState.todoData.slice(0, index), newObj, ...prevState.todoData.slice(index + 1)];\n      return newArr;\n    };\n\n    this.onToggleDone = id => {\n      this.setState(prevState => {\n        return {\n          todoData: this.getNewArrAccordingProp('done', prevState, id)\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(prevState => {\n        return {\n          todoData: this.getNewArrAccordingProp('important', prevState, id)\n        };\n      });\n    };\n\n    this.onFilterChange = filter => {\n      this.setState({\n        filter: filter\n      });\n    };\n\n    this.onSearchChange = search => {\n      this.setState({\n        search: search\n      });\n    };\n  }\n\n  render() {\n    const {\n      todoData,\n      filter,\n      search\n    } = this.state;\n    const doneSize = this.state.todoData.filter(el => el.done).length;\n    const todoSize = this.state.todoData.length - doneSize;\n    const visibleTodos = this.search(this.filter(todoData, filter), search);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      done: doneSize,\n      todo: todoSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchBlock, {\n      onSearchChange: this.onSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Filter, {\n      onFilterChange: this.onFilterChange,\n      filter: filter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(ItemAddForm, {\n      onAdd: this.onAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TodoList, {\n      todos: visibleTodos,\n      onDelete: this.onDelete,\n      onToggleDone: this.onToggleDone,\n      onToggleImportant: this.onToggleImportant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/alex_hoadley/Desktop/GitHub/toDoList-React-TMS/src/components/App/App.js"],"names":["React","SearchBlock","Header","TodoList","Filter","ItemAddForm","App","Component","cId","state","todoData","text","important","done","id","filter","arr","el","onDelete","setState","prevState","index","findIndex","slice","search","searchText","newArr","item","toUpperCase","includes","onAdd","label","obj","getNewArrAccordingProp","prop","newObj","onToggleDone","onToggleImportant","onFilterChange","onSearchChange","render","doneSize","length","todoSize","visibleTodos"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SearchBlock from '../SearchBlock';\nimport Header from '../Header';\nimport TodoList from '../TodoList';\nimport './App.css';\nimport Filter from '../Filter';\nimport ItemAddForm from '../ItemAddForm/ItemAddForm';\n\nexport default class App extends React.Component {\n  cId = 100;\n\n  state = {\n    todoData: [\n      { text: 'Learn HTML', important: false, done: false, id: 1 },\n      { text: 'Learn CSS', important: true, done: false, id: 2 },\n      { text: 'Learn JS', important: false, done: false, id: 3 },\n    ],\n    filter: 'all', // all || active || done\n  };\n\n  filter = (arr, filter) => {\n    switch (filter) {\n      case 'all':\n        return arr;\n      case 'active':\n        return arr.filter((el) => !el.done);\n      case 'done':\n        return arr.filter((el) => el.done);\n      default:\n        return arr;\n    }\n  };\n\n  onDelete = (id) => {\n    this.setState((prevState) => {\n      const index = prevState.todoData.findIndex((el) => el.id === id);\n\n      const arr = [...prevState.todoData.slice(0, index), ...prevState.todoData.slice(index + 1)];\n\n      return {\n        todoData: arr,\n      };\n    });\n  };\n\n  search = (arr, searchText) => {\n    if (!searchText) {\n      return arr;\n    }\n\n    const newArr = arr.filter((item) => {\n      return item.text.toUpperCase().includes(searchText.toUpperCase());\n    });\n\n    return newArr;\n  };\n\n  onAdd = (label) => {\n    const obj = {\n      text: label,\n      important: false,\n      id: this.cId++,\n    };\n\n    this.setState((prevState) => {\n      const newArr = [obj, ...prevState.todoData];\n\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  getNewArrAccordingProp = (prop, prevState, id) => {\n    const index = prevState.todoData.findIndex((el) => el.id === id);\n\n    const newObj = {\n      ...prevState.todoData[index],\n      [prop]: !prevState.todoData[index][prop],\n    };\n\n    const newArr = [\n      ...prevState.todoData.slice(0, index),\n      newObj,\n      ...prevState.todoData.slice(index + 1),\n    ];\n\n    return newArr;\n  };\n\n  onToggleDone = (id) => {\n    this.setState((prevState) => {\n      return {\n        todoData: this.getNewArrAccordingProp('done', prevState, id),\n      };\n    });\n  };\n\n  onToggleImportant = (id) => {\n    this.setState((prevState) => {\n      return {\n        todoData: this.getNewArrAccordingProp('important', prevState, id),\n      };\n    });\n  };\n\n  onFilterChange = (filter) => {\n    this.setState({\n      filter: filter,\n    });\n  };\n\n  onSearchChange = (search) => {\n    this.setState({\n      search: search,\n    });\n  };\n\n  render() {\n    const { todoData, filter, search } = this.state;\n    const doneSize = this.state.todoData.filter((el) => el.done).length;\n    const todoSize = this.state.todoData.length - doneSize;\n    const visibleTodos = this.search(this.filter(todoData, filter), search);\n\n    return (\n      <div className='App'>\n        <Header done={doneSize} todo={todoSize} />\n        <div className='line'>\n          <SearchBlock onSearchChange={this.onSearchChange} />\n          <Filter onFilterChange={this.onFilterChange} filter={filter} />\n        </div>\n        <ItemAddForm onAdd={this.onAdd} />\n        <TodoList\n          todos={visibleTodos}\n          onDelete={this.onDelete}\n          onToggleDone={this.onToggleDone}\n          onToggleImportant={this.onToggleImportant}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}